{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"syntax":null,"code":["This doesn't specify any syntax'"],"type":"codeListing"},{"type":"codeListing","syntax":"bash","code":["#!\/bin\/bash","echo \"Hello, World!\"","ls -l | grep \"\\.txt$\""]},{"type":"codeListing","syntax":"c","code":["#include <stdio.h>","int main() {","    printf(\"Hello, World!\\n\");","    return 0;","}"]},{"syntax":"cpp","code":["#include <iostream>","int main() {","    std::cout << \"Hello, World!\" << std::endl;","    return 0;","}"],"type":"codeListing"},{"type":"codeListing","code":["body {","  font-family: Arial, sans-serif;","  background-color: #f0f0f0;","}"],"syntax":"css"},{"type":"codeListing","syntax":"scss","code":["$primary-color: #3498db;",".button {","  background-color: $primary-color;","  &:hover { opacity: 0.8; }","}"]},{"code":["- This line is removed","+ This line is added","This line is unchanged"],"syntax":"diff","type":"codeListing"},{"type":"codeListing","syntax":"http","code":["GET \/api\/users HTTP\/1.1","Host: example.com","Accept: application\/json"]},{"type":"codeListing","code":["public class HelloWorld {","  public static void main(String[] args) {","    System.out.println(\"Hello, World!\");","  }","}"],"syntax":"java"},{"syntax":"javascript","code":["function greet(name) {","  console.log(`Hello, ${name}!`);","}","greet(\"World\");"],"type":"codeListing"},{"type":"codeListing","code":["{","  \"name\": \"John Doe\",","  \"age\": 30,","  \"city\": \"New York\"","}"],"syntax":"json"},{"type":"codeListing","code":["define i32 @main() {","  %1 = call i32 @puts(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str, i32 0, i32 0))","  ret i32 0","}"],"syntax":"llvm"},{"syntax":"markdown","code":["# Hello, World!","This is a **bold** text and this is *italic*.","[Link to Google](https:\/\/www.google.com)"],"type":"codeListing"},{"type":"codeListing","syntax":"objectivec","code":["#import <Foundation\/Foundation.h>","int main(int argc, const char * argv[]) {","  NSLog(@\"Hello, World!\");","  return 0;","}"]},{"type":"codeListing","syntax":"perl","code":["#!\/usr\/bin\/perl","use strict;","use warnings;","print \"Hello, World!\\n\";"]},{"type":"codeListing","syntax":"php","code":["<?php","  echo \"Hello, World!\";","  phpinfo();","?>"]},{"syntax":"python","type":"codeListing","code":["def greet(name):","    return f\"Hello, {name}!\"","print(greet(\"World\"))"]},{"syntax":"ruby","type":"codeListing","code":["def greet(name)","  puts \"Hello, #{name}!\"","end","greet(\"World\")"]},{"code":["$ echo \"Hello, World!\"","$ ls -l | grep \"\\.txt$\""],"syntax":"shell","type":"codeListing"},{"syntax":"swift","code":["func greet(name: String) -> String {","    return \"Hello, \\(name)!\"","}","print(greet(name: \"World\"))"],"type":"codeListing"},{"syntax":"xml","type":"codeListing","code":["<?xml version=\"1.0\" encoding=\"UTF-8\"?>","    <greeting>","    <message>Hello, World!<\/message>","<\/greeting>"]},{"type":"codeListing","syntax":"metal","code":["#include <metal_stdlib>","using namespace metal;","kernel void add_arrays(device const float* inA,","device const float* inB,","device float* result,","uint index [[thread_position_in_grid]])","{","    result[index] = inA[index] + inB[index];","}"]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/TestDocumentation\/documentation\/TestDocumentation\/CodeListing","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/testdocumentation\/codelisting"]}],"hierarchy":{"paths":[["doc:\/\/TestDocumentation\/documentation\/TestDocumentation"]]},"metadata":{"title":"Code","modules":[{"name":"TestDocumentation"}],"roleHeading":"Article","role":"article"},"abstract":[{"type":"text","text":"Each example demonstrates how to properly format code snippets within DocC"}],"references":{"doc://TestDocumentation/documentation/TestDocumentation":{"title":"TestDocumentation","identifier":"doc:\/\/TestDocumentation\/documentation\/TestDocumentation","type":"topic","role":"collection","url":"\/documentation\/testdocumentation","kind":"symbol","abstract":[]}}}